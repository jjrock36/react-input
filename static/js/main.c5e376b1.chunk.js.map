{"version":3,"sources":["context.js","Header.js","Input.js","TextArea.js","Center.js","Icons.js","Sizes.js","Colors.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","button","setButton","showSidebar","setShowSidebar","showIcons","setShowIcons","showSizes","setShowSizes","showColors","setShowColors","icon","setIcon","size","setSize","color","setColor","isTextArea","setIsTextArea","isError","setIsError","isDisabled","setIsDisabled","isBoxShadow","setIsBoxShadow","Provider","value","handleButton","e","target","id","handleSidebar","handleIcon","handleSize","handleColor","handleSwitch","useGlobalContext","useContext","Header","className","onClick","Input","type","name","maxLength","placeholder","disabled","TextArea","rows","Center","htmlFor","Icons","checked","Sizes","Colors","Sidebar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e376b1.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [button, setButton] = useState('outlined');\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const [showIcons, setShowIcons] = useState(false);\r\n  const [showSizes, setShowSizes] = useState(false);\r\n  const [showColors, setShowColors] = useState(false);\r\n  const [icon, setIcon] = useState('none');\r\n  const [size, setSize] = useState('small');\r\n  const [color, setColor] = useState('purple');\r\n  const [isTextArea, setIsTextArea] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isBoxShadow, setIsBoxShadow] = useState(false);\r\n\r\n  const handleButton = (e) => {\r\n    setButton(e.target.id);\r\n  };\r\n  const handleSidebar = () => {\r\n    setShowSidebar(!showSidebar);\r\n  };\r\n  const handleIcon = (e) => {\r\n    setIcon(e.target.id);\r\n  };\r\n  const handleSize = (e) => {\r\n    setSize(e.target.id);\r\n  };\r\n  const handleColor = (e) => {\r\n    setColor(e.target.id);\r\n  };\r\n  const handleSwitch = (e) => {\r\n    if (e.target.id === 'text-area') {\r\n      setIsTextArea(!isTextArea);\r\n    }\r\n    if (e.target.id === 'error') {\r\n      setIsError(!isError);\r\n    }\r\n    if (e.target.id === 'disable') {\r\n      setIsDisabled(!isDisabled);\r\n    }\r\n    if (e.target.id === 'box-shadow') {\r\n      setIsBoxShadow(!isBoxShadow);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        button,\r\n        handleButton,\r\n\r\n        showSidebar,\r\n        setShowSidebar,\r\n        handleSidebar,\r\n\r\n        showIcons,\r\n        setShowIcons,\r\n        icon,\r\n        handleIcon,\r\n\r\n        showSizes,\r\n        setShowSizes,\r\n        size,\r\n        handleSize,\r\n\r\n        showColors,\r\n        setShowColors,\r\n        color,\r\n        handleColor,\r\n\r\n        isError,\r\n        isDisabled,\r\n        isBoxShadow,\r\n        isTextArea,\r\n        handleSwitch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Header = () => {\r\n  const { showSidebar, handleSidebar, button, handleButton } =\r\n    useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-header\">\r\n        <ul className=\"button-type\">\r\n          <li>\r\n            <span\r\n              className={`${button === 'outlined' ? 'active' : ''}`}\r\n              id=\"outlined\"\r\n              onClick={handleButton}\r\n            >\r\n              outlined\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span\r\n              className={`${button === 'filled' ? 'active' : ''}`}\r\n              id=\"filled\"\r\n              onClick={handleButton}\r\n            >\r\n              filled\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <span\r\n          className={`material-icons md-dark tune-btn ${\r\n            showSidebar ? 'hide-icon' : ''\r\n          }`}\r\n          onClick={handleSidebar}\r\n        >\r\n          tune\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Input = () => {\r\n  const { button, icon, color, isError, isDisabled, isBoxShadow, isTextArea } =\r\n    useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        name=\"text-input\"\r\n        className={`input-field ${\r\n          icon === 'leading' ? 'input-leading' : ''\r\n        } ${color} ${isTextArea ? 'text-area' : ''}  ${\r\n          isError ? 'error' : ''\r\n        } ${isDisabled ? 'disabled' : ''} ${\r\n          isBoxShadow ? 'shadow' : ''\r\n        } ${button}`}\r\n        id=\"text-input\"\r\n        maxLength=\"26\"\r\n        placeholder=\"Placeholder\"\r\n        disabled={isDisabled}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const TextArea = () => {\r\n  const { button, icon, color, isError, isDisabled, isBoxShadow, isTextArea } =\r\n    useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        name=\"text-input\"\r\n        id=\"text-input\"\r\n        rows=\"10\"\r\n        type=\"text\"\r\n        className={`input-field ${\r\n          icon === 'leading' ? 'input-leading' : ''\r\n        } ${color} ${isTextArea ? 'text-area' : ''}  ${\r\n          isError ? 'error' : ''\r\n        } ${isDisabled ? 'disabled' : ''} ${\r\n          isBoxShadow ? 'shadow' : ''\r\n        } ${button}`}\r\n        maxLength=\"26\"\r\n        placeholder=\"Placeholder\"\r\n        disabled={isDisabled}\r\n      ></textarea>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Input } from './Input';\r\nimport { TextArea } from './TextArea';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Center = () => {\r\n  const { icon, size, isError, isTextArea } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-center\">\r\n        <div className={`input-wrapper ${size}`}>\r\n          {/* leading icon */}\r\n          <span\r\n            className={`material-icons ${\r\n              icon === 'leading' ? 'leading' : 'hide-icon'\r\n            }`}\r\n          >\r\n            star\r\n          </span>\r\n\r\n          {/* label*/}\r\n          <label htmlFor=\"text-input\" className=\"input-label\">\r\n            <span className=\"input-label-content\">\r\n              label{isError ? '*' : ''}\r\n            </span>\r\n          </label>\r\n\r\n          {/* input/textarea */}\r\n          {isTextArea ? <TextArea /> : <Input />}\r\n\r\n          {/* lagging icon */}\r\n          <span\r\n            className={`material-icons ${\r\n              icon === 'lagging' ? 'lagging' : 'hide-icon'\r\n            }`}\r\n          >\r\n            star\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Icons = () => {\r\n  const { icon, showIcons, setShowIcons, handleIcon } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <span className=\"input-header\" onClick={() => setShowIcons(!showIcons)}>\r\n          icons\r\n          <span className=\"material-icons\">\r\n            {showIcons ? 'expand_less' : 'expand_more'}\r\n          </span>\r\n        </span>\r\n\r\n        <form className={`form ${showIcons ? '' : 'hide-form'}`}>\r\n          <div className=\"form-center\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"icon\"\r\n                id=\"leading\"\r\n                className=\"input\"\r\n                onClick={handleIcon}\r\n                checked={icon === 'leading'}\r\n              />\r\n              <label htmlFor=\"leading-icon\">leading icon</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"icon\"\r\n                id=\"lagging\"\r\n                className=\"input\"\r\n                onClick={handleIcon}\r\n                checked={icon === 'lagging'}\r\n              />\r\n              <label htmlFor=\"lagging-icon\">lagging icon</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"icon\"\r\n                id=\"none\"\r\n                className=\"input\"\r\n                onClick={handleIcon}\r\n                checked={icon === 'none'}\r\n              />\r\n              <label htmlFor=\"none\">none</label>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Sizes = () => {\r\n  const {\r\n    size,\r\n    showSizes,\r\n    setShowSizes,\r\n    handleSize,\r\n    handleSwitch,\r\n    isTextArea,\r\n  } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <span className=\"input-header\" onClick={() => setShowSizes(!showSizes)}>\r\n          sizes\r\n          <span className=\"material-icons\">\r\n            {showSizes ? 'expand_less' : 'expand_more'}\r\n          </span>\r\n        </span>\r\n\r\n        <form className={`form ${showSizes ? '' : 'hide-form'}`}>\r\n          <div className=\"form-center\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"size\"\r\n                id=\"small\"\r\n                className=\"input\"\r\n                onClick={handleSize}\r\n                checked={size === 'small'}\r\n              />\r\n              <label htmlFor=\"small\">small</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"size\"\r\n                id=\"medium\"\r\n                className=\"input\"\r\n                onClick={handleSize}\r\n                checked={size === 'medium'}\r\n              />\r\n              <label htmlFor=\"medium\">medium</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"size\"\r\n                id=\"large\"\r\n                className=\"input\"\r\n                onClick={handleSize}\r\n                checked={size === 'large'}\r\n              />\r\n              <label htmlFor=\"large\">large</label>\r\n            </div>\r\n\r\n            <label htmlFor=\"\" className=\"switch\">\r\n              text area\r\n              <div className=\"toggle-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"text-area\"\r\n                  onClick={handleSwitch}\r\n                  checked={isTextArea}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Colors = () => {\r\n  const {\r\n    color,\r\n    showColors,\r\n    setShowColors,\r\n    handleColor,\r\n    isError,\r\n    isDisabled,\r\n    isBoxShadow,\r\n    handleSwitch,\r\n  } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <span\r\n          className=\"input-header\"\r\n          onClick={() => setShowColors(!showColors)}\r\n        >\r\n          colors\r\n          <span className=\"material-icons\">\r\n            {showColors ? 'expand_less' : 'expand_more'}\r\n          </span>\r\n        </span>\r\n\r\n        <form className={`form ${showColors ? '' : 'hide-form'}`}>\r\n          <div className=\"form-center\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                id=\"purple\"\r\n                className=\"input\"\r\n                onClick={handleColor}\r\n                checked={color === 'purple'}\r\n              />\r\n              <label htmlFor=\"purple\">purple</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                id=\"pink\"\r\n                className=\"input\"\r\n                onClick={handleColor}\r\n                checked={color === 'pink'}\r\n              />\r\n              <label htmlFor=\"pink\">pink</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                id=\"yellow\"\r\n                className=\"input\"\r\n                onClick={handleColor}\r\n                checked={color === 'yellow'}\r\n              />\r\n              <label htmlFor=\"yellow\">yellow</label>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color\"\r\n                id=\"blue\"\r\n                className=\"input\"\r\n                onClick={handleColor}\r\n                checked={color === 'blue'}\r\n              />\r\n              <label htmlFor=\"blue\">blue</label>\r\n            </div>\r\n\r\n            <label htmlFor=\"\" className=\"switch\">\r\n              error\r\n              <div className=\"toggle-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"error\"\r\n                  onClick={handleSwitch}\r\n                  checked={isError}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </div>\r\n            </label>\r\n\r\n            <label htmlFor=\"\" className=\"switch\">\r\n              disabled\r\n              <div className=\"toggle-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"disable\"\r\n                  onClick={handleSwitch}\r\n                  checked={isDisabled}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </div>\r\n            </label>\r\n\r\n            <label htmlFor=\"\" className=\"switch\">\r\n              box shadow\r\n              <div className=\"toggle-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"box-shadow\"\r\n                  onClick={handleSwitch}\r\n                  checked={isBoxShadow}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Icons } from './Icons';\r\nimport { Sizes } from './Sizes';\r\nimport { Colors } from './Colors';\r\nimport { useGlobalContext } from './context';\r\n\r\nexport const Sidebar = () => {\r\n  const { showSidebar, setShowSidebar } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <aside className=\"sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h4>options</h4>\r\n          <span\r\n            className=\"material-icons md-dark close-btn\"\r\n            onClick={() => setShowSidebar(!showSidebar)}\r\n          >\r\n            close\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"sidebar-center\">\r\n          <ul className=\"sidebar-list\">\r\n            <Icons />\r\n            <Sizes />\r\n            <Colors />\r\n          </ul>\r\n        </div>\r\n      </aside>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport './index.css';\n\nimport { Header } from './Header';\nimport { Center } from './Center';\nimport { Sidebar } from './Sidebar';\nimport { useGlobalContext } from './context';\n\nconst App = () => {\n  const { showSidebar } = useGlobalContext();\n\n  return (\n    <>\n      <section className={`section ${showSidebar ? 'show-sidebar' : ''}`}>\n        <div className=\"container\">\n          <Header />\n          <Center />\n        </div>\n\n        {showSidebar && <Sidebar />}\n      </section>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { AppProvider } from './context';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}